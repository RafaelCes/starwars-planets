{"ast":null,"code":"import _toConsumableArray from\"/home/rafael/Documents/projects/starwars-planets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"/home/rafael/Documents/projects/starwars-planets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/rafael/Documents/projects/starwars-planets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/rafael/Documents/projects/starwars-planets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import PlanetsContext from'./PlanetsContext';var options=['population','orbital_period','diameter','rotation_period','surface_water'];var url='https://swapi-trybe.herokuapp.com/api/planets/';function Provider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(data),_useState4=_slicedToArray(_useState3,2),filteredData=_useState4[0],setFilteredData=_useState4[1];var _useState5=useState(options),_useState6=_slicedToArray(_useState5,2),columnFilterOptions=_useState6[0],setColumnFilterOptions=_useState6[1];var _useState7=useState({column:'name',sort:'ASC'}),_useState8=_slicedToArray(_useState7,2),newOrder=_useState8[0],setNewOrder=_useState8[1];var _useState9=useState({column:columnFilterOptions[0],comparison:'maior que',value:0}),_useState10=_slicedToArray(_useState9,2),newFilter=_useState10[0],setNewFilter=_useState10[1];var _useState11=useState({filterByName:{name:''},filterByNumericValues:[],order:{column:'name',sort:'ASC'}}),_useState12=_slicedToArray(_useState11,2),filters=_useState12[0],setFilters=_useState12[1];var fetchData=function fetchData(){return fetch(url).then(function(result){return result.json();}).then(function(response){return setData(response.results.map(function(element){delete element.residents;return element;}));}).catch(function(err){return err;});};var handleChangeNewFilter=function handleChangeNewFilter(_ref2){var target=_ref2.target;var name=target.name,value=target.value;setNewFilter(function(state){return _objectSpread(_objectSpread({},state),{},_defineProperty({},name,value));});};var setFilterByNumericValues=function setFilterByNumericValues(){setFilters(function(state){return _objectSpread(_objectSpread({},state),{},{filterByNumericValues:[].concat(_toConsumableArray(state.filterByNumericValues),[newFilter])});});setColumnFilterOptions(columnFilterOptions.filter(function(item){return item!==newFilter.column;}));};var removeFilterByNumericValues=function removeFilterByNumericValues(column){setFilters(function(state){return _objectSpread(_objectSpread({},state),{},{filterByNumericValues:state.filterByNumericValues.filter(function(item){return column!==item.column;})});});setColumnFilterOptions(function(state){return[column].concat(_toConsumableArray(state));});};useEffect(function(){setNewFilter({column:columnFilterOptions[0],comparison:'maior que',value:0});},[columnFilterOptions]);var setFilterByName=function setFilterByName(name){setFilters(function(state){return _objectSpread(_objectSpread({},state),{},{filterByName:{name:name}});});};var applyFilterByNumericValues=function applyFilterByNumericValues(newData){newData=filters.filterByNumericValues.reduce(function(acc,curr){var column=curr.column,comparison=curr.comparison,value=curr.value;switch(comparison){case'maior que':return acc.filter(function(item){return parseInt(item[column],10)>parseInt(value,10);});case'menor que':return acc.filter(function(item){return parseInt(item[column],10)<parseInt(value,10);});case'igual a':return acc.filter(function(item){return parseInt(item[column],10)===parseInt(value,10);});default:return acc;}},newData);return newData;};var orderData=function orderData(newData){var _filters$order=filters.order,column=_filters$order.column,sort=_filters$order.sort;var sortedData=newData.sort(function(a,b){if(sort==='ASC'){return a[column].localeCompare(b[column],undefined,{numeric:true,sensitivity:'base'});}return b[column].localeCompare(a[column],undefined,{numeric:true,sensitivity:'base'});});return sortedData;};var applyFilterByName=function applyFilterByName(){return data.filter(function(_ref3){var name=_ref3.name;return name.includes(filters.filterByName.name);});};var applyFilters=function applyFilters(){var newData=applyFilterByName();newData=applyFilterByNumericValues(newData);newData=orderData(newData);setFilteredData(newData);};var contextValue={data:data,fetchData:fetchData,filters:filters,setFilters:setFilters,setFilterByName:setFilterByName,filteredData:filteredData,setFilteredData:setFilteredData,applyFilters:applyFilters,columnFilterOptions:columnFilterOptions,newFilter:newFilter,handleChangeNewFilter:handleChangeNewFilter,setFilterByNumericValues:setFilterByNumericValues,removeFilterByNumericValues:removeFilterByNumericValues,newOrder:newOrder,setNewOrder:setNewOrder};return/*#__PURE__*/React.createElement(PlanetsContext.Provider,{value:contextValue},children);}export default Provider;","map":{"version":3,"sources":["/home/rafael/Documents/projects/starwars-planets/src/PlanetsProvider.js"],"names":["React","useEffect","useState","PlanetsContext","options","url","Provider","children","data","setData","filteredData","setFilteredData","columnFilterOptions","setColumnFilterOptions","column","sort","newOrder","setNewOrder","comparison","value","newFilter","setNewFilter","filterByName","name","filterByNumericValues","order","filters","setFilters","fetchData","fetch","then","result","json","response","results","map","element","residents","catch","err","handleChangeNewFilter","target","state","setFilterByNumericValues","filter","item","removeFilterByNumericValues","setFilterByName","applyFilterByNumericValues","newData","reduce","acc","curr","parseInt","orderData","sortedData","a","b","localeCompare","undefined","numeric","sensitivity","applyFilterByName","includes","applyFilters","contextValue"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PlanetsContext from './PlanetsContext';\n\nconst options = [\n  'population',\n  'orbital_period',\n  'diameter',\n  'rotation_period',\n  'surface_water'];\n\nconst url = 'https://swapi-trybe.herokuapp.com/api/planets/';\n\nfunction Provider({ children }) {\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState(data);\n  const [columnFilterOptions, setColumnFilterOptions] = useState(options);\n  const [newOrder, setNewOrder] = useState({ column: 'name', sort: 'ASC' });\n  const [newFilter, setNewFilter] = useState({ column: columnFilterOptions[0],\n    comparison: 'maior que',\n    value: 0,\n  });\n  const [filters, setFilters] = useState({\n    filterByName: { name: '' },\n    filterByNumericValues: [],\n    order: { column: 'name', sort: 'ASC' },\n  });\n\n  const fetchData = () => fetch(url)\n    .then((result) => result.json())\n    .then((response) => setData(response.results.map((element) => {\n      delete element.residents;\n      return element;\n    })))\n    .catch((err) => err);\n\n  const handleChangeNewFilter = ({ target }) => {\n    const { name, value } = target;\n    setNewFilter((state) => ({ ...state, [name]: value }));\n  };\n\n  const setFilterByNumericValues = () => {\n    setFilters((state) => ({\n      ...state,\n      filterByNumericValues: [...state.filterByNumericValues, newFilter],\n    }));\n    setColumnFilterOptions(columnFilterOptions\n      .filter((item) => item !== newFilter.column));\n  };\n\n  const removeFilterByNumericValues = (column) => {\n    setFilters((state) => ({\n      ...state,\n      filterByNumericValues: state.filterByNumericValues\n        .filter((item) => column !== item.column),\n    }));\n    setColumnFilterOptions((state) => [column, ...state]);\n  };\n\n  useEffect(() => {\n    setNewFilter({ column: columnFilterOptions[0], comparison: 'maior que', value: 0 });\n  }, [columnFilterOptions]);\n\n  const setFilterByName = (name) => {\n    setFilters((state) => ({ ...state, filterByName: { name } }));\n  };\n\n  const applyFilterByNumericValues = (newData) => {\n    newData = filters.filterByNumericValues.reduce((acc, curr) => {\n      const { column, comparison, value } = curr;\n      switch (comparison) {\n      case 'maior que':\n        return acc.filter((item) => parseInt(item[column], 10) > parseInt(value, 10));\n      case 'menor que':\n        return acc.filter((item) => parseInt(item[column], 10) < parseInt(value, 10));\n      case 'igual a':\n        return acc.filter((item) => parseInt(item[column], 10) === parseInt(value, 10));\n      default: return acc;\n      }\n    }, newData);\n    return newData;\n  };\n\n  const orderData = (newData) => {\n    const { column, sort } = filters.order;\n    const sortedData = newData.sort((a, b) => {\n      if (sort === 'ASC') {\n        return a[column].localeCompare(b[column], undefined, {\n          numeric: true,\n          sensitivity: 'base',\n        });\n      }\n      return b[column].localeCompare(a[column], undefined, {\n        numeric: true,\n        sensitivity: 'base',\n      });\n    });\n    return sortedData;\n  };\n\n  const applyFilterByName = () => data.filter(({ name }) => name\n    .includes(filters.filterByName.name));\n\n  const applyFilters = () => {\n    let newData = applyFilterByName();\n    newData = applyFilterByNumericValues(newData);\n    newData = orderData(newData);\n    setFilteredData(newData);\n  };\n\n  const contextValue = {\n    data,\n    fetchData,\n    filters,\n    setFilters,\n    setFilterByName,\n    filteredData,\n    setFilteredData,\n    applyFilters,\n    columnFilterOptions,\n    newFilter,\n    handleChangeNewFilter,\n    setFilterByNumericValues,\n    removeFilterByNumericValues,\n    newOrder,\n    setNewOrder,\n  };\n\n  return (\n    <PlanetsContext.Provider value={ contextValue }>\n      {children}\n    </PlanetsContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node,\n}.isRequired;\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}