{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documents/projects/sd-011-project-starwars-planets-search/src/PlanetsProvider.js\";\nimport React, { useState } from 'react';\nimport PlanetsContext from './PlanetsContext';\nconst url = 'https://swapi-trybe.herokuapp.com/api/planets/';\n\nfunction Provider({\n  children\n}) {\n  const [data, setData] = useState([]);\n\n  const fetchData = () => fetch(url).then(result => result.json()).then(({\n    results\n  }) => setData(results.map(element => {\n    delete element.residents;\n    return element;\n  })));\n\n  const contextValue = {\n    data,\n    fetchData\n  };\n  return /*#__PURE__*/React.createElement(PlanetsContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nexport default Provider;","map":{"version":3,"sources":["/home/rafael/Documents/projects/sd-011-project-starwars-planets-search/src/PlanetsProvider.js"],"names":["React","useState","PlanetsContext","url","Provider","children","data","setData","fetchData","fetch","then","result","json","results","map","element","residents","contextValue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,MAAMC,GAAG,GAAG,gDAAZ;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMO,SAAS,GAAG,MAAMC,KAAK,CAACN,GAAD,CAAL,CACrBO,IADqB,CACfC,MAAD,IAAYA,MAAM,CAACC,IAAP,EADI,EAErBF,IAFqB,CAEhB,CAAC;AAAEG,IAAAA;AAAF,GAAD,KAAiBN,OAAO,CAACM,OAAO,CAACC,GAAR,CAAaC,OAAD,IAAa;AACtD,WAAOA,OAAO,CAACC,SAAf;AACA,WAAOD,OAAP;AACD,GAH8B,CAAD,CAFR,CAAxB;;AAOA,QAAME,YAAY,GAAG;AACnBX,IAAAA,IADmB;AAEnBE,IAAAA;AAFmB,GAArB;AAKA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAGS,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,QADH,CADF;AAKD;;AAED,eAAeD,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport PlanetsContext from './PlanetsContext';\n\nconst url = 'https://swapi-trybe.herokuapp.com/api/planets/';\n\nfunction Provider({ children }) {\n  const [data, setData] = useState([]);\n\n  const fetchData = () => fetch(url)\n    .then((result) => result.json())\n    .then(({ results }) => setData(results.map((element) => {\n      delete element.residents;\n      return element;\n    })));\n\n  const contextValue = {\n    data,\n    fetchData,\n  };\n\n  return (\n    <PlanetsContext.Provider value={ contextValue }>\n      {children}\n    </PlanetsContext.Provider>\n  );\n}\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}