{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documents/projects/sd-011-project-starwars-planets-search/src/Filters.js\";\nimport React, { useContext, useEffect } from 'react';\nimport PlanetsContext from './PlanetsContext';\nexport default function Filters() {\n  const {\n    filters,\n    setFilters,\n    data,\n    setFilterByName,\n    applyFilters,\n    columnFilterOptions,\n    newFilter,\n    handleChangeNewFilter,\n    setFilterByNumericValues,\n    removeFilterByNumericValues,\n    newOrder,\n    setNewOrder\n  } = useContext(PlanetsContext);\n  const {\n    filterByName: {\n      name\n    },\n    filterByNumericValues\n  } = filters;\n  const {\n    column,\n    comparison,\n    value\n  } = newFilter;\n  useEffect(() => {\n    applyFilters();\n  }, [filters]);\n\n  const renderColumnOptions = () => columnFilterOptions.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    key: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 39\n    }\n  }, item));\n\n  const renderFilters = () => filterByNumericValues.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    key: item.column,\n    \"data-testid\": \"filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, item.column, ' ', item.comparison, ' ', item.value), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => removeFilterByNumericValues(item.column),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"X\")));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"search-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Pesquisa:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    \"data-testid\": \"name-filter\",\n    id: \"search-input\",\n    value: name,\n    onChange: event => setFilterByName(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"column-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"column-filter\",\n    name: \"column\",\n    id: \"column-filter\",\n    value: column,\n    onChange: handleChangeNewFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, renderColumnOptions())), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"comparison-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"comparison-filter\",\n    name: \"comparison\",\n    id: \"comparison-filter\",\n    value: comparison,\n    onChange: handleChangeNewFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"maior que\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"menor que\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"igual a\"))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"value-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, \"valor:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    \"data-testid\": \"value-filter\",\n    name: \"value\",\n    id: \"value-filter\",\n    value: value,\n    onChange: handleChangeNewFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"button-filter\",\n    onClick: setFilterByNumericValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, \"Adicionar filtro\"), /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"column-sort\",\n    value: newOrder.column,\n    onChange: event => setNewOrder({ ...order,\n      column: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, data.length ? Object.keys(data[0]).map(item => /*#__PURE__*/React.createElement(\"option\", {\n    key: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 46\n    }\n  }, item)) : ''), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"asc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, \"ascendente:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"asc\",\n    name: \"sort\",\n    \"data-testid\": \"column-sort-input-asc\",\n    value: \"ASC\",\n    checked: newOrder.sort === 'ASC',\n    onChange: () => setNewOrder({ ...newOrder,\n      sort: 'ASC'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, \"Descendente:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"desc\",\n    name: \"sort\",\n    \"data-testid\": \"column-sort-input-desc\",\n    value: \"DESC\",\n    checked: newOrder.sort === 'DESC',\n    onChange: () => setNewOrder({ ...newOrder,\n      sort: 'DESC'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"column-sort-button\",\n    onClick: () => setFilters({ ...filters,\n      order: newOrder\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, \"Ordenar\"), renderFilters());\n}","map":{"version":3,"sources":["/home/rafael/Documents/projects/sd-011-project-starwars-planets-search/src/Filters.js"],"names":["React","useContext","useEffect","PlanetsContext","Filters","filters","setFilters","data","setFilterByName","applyFilters","columnFilterOptions","newFilter","handleChangeNewFilter","setFilterByNumericValues","removeFilterByNumericValues","newOrder","setNewOrder","filterByName","name","filterByNumericValues","column","comparison","value","renderColumnOptions","map","item","renderFilters","event","target","order","length","Object","keys","sort"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport PlanetsContext from './PlanetsContext';\n\nexport default function Filters() {\n  const {\n    filters,\n    setFilters,\n    data,\n    setFilterByName,\n    applyFilters,\n    columnFilterOptions,\n    newFilter,\n    handleChangeNewFilter,\n    setFilterByNumericValues,\n    removeFilterByNumericValues,\n    newOrder,\n    setNewOrder,\n  } = useContext(PlanetsContext);\n\n  const { filterByName: { name }, filterByNumericValues } = filters;\n  const { column, comparison, value } = newFilter;\n\n  useEffect(() => {\n    applyFilters();\n  }, [filters]);\n\n  const renderColumnOptions = () => (\n    columnFilterOptions.map((item) => <option key={ item }>{ item }</option>)\n  );\n\n  const renderFilters = () => filterByNumericValues.map((item) => (\n    <div key={ item.column } data-testid=\"filter\">\n      <p>\n        {item.column}\n        {' '}\n        {item.comparison}\n        {' '}\n        {item.value}\n      </p>\n      <button\n        type=\"button\"\n        onClick={ () => removeFilterByNumericValues(item.column) }\n      >\n        X\n      </button>\n    </div>\n  ));\n\n  return (\n    <div>\n\n      <label htmlFor=\"search-input\">\n        Pesquisa:\n        <input\n          type=\"text\"\n          data-testid=\"name-filter\"\n          id=\"search-input\"\n          value={ name }\n          onChange={ (event) => setFilterByName(event.target.value) }\n        />\n      </label>\n      <label htmlFor=\"column-filter\">\n        <select\n          data-testid=\"column-filter\"\n          name=\"column\"\n          id=\"column-filter\"\n          value={ column }\n          onChange={ handleChangeNewFilter }\n        >\n          {renderColumnOptions()}\n        </select>\n      </label>\n      <label htmlFor=\"comparison-filter\">\n        <select\n          data-testid=\"comparison-filter\"\n          name=\"comparison\"\n          id=\"comparison-filter\"\n          value={ comparison }\n          onChange={ handleChangeNewFilter }\n        >\n          <option>maior que</option>\n          <option>menor que</option>\n          <option>igual a</option>\n        </select>\n      </label>\n      <label htmlFor=\"value-filter\">\n        valor:\n        <input\n          type=\"number\"\n          data-testid=\"value-filter\"\n          name=\"value\"\n          id=\"value-filter\"\n          value={ value }\n          onChange={ handleChangeNewFilter }\n        />\n      </label>\n      <button\n        type=\"button\"\n        data-testid=\"button-filter\"\n        onClick={ setFilterByNumericValues }\n      >\n        Adicionar filtro\n      </button>\n      <select\n        data-testid='column-sort'\n        value={ newOrder.column }\n        onChange={(event) => setNewOrder({...order, column: event.target.value })}\n      >\n        {data.length? \n          Object.keys(data[0]).map((item) => <option key={ item }>{ item }</option>)\n        :''\n        }\n      </select>\n      <label htmlFor=\"asc\">\n        ascendente:\n        <input\n          type=\"radio\"\n          id=\"asc\"\n          name=\"sort\"\n          data-testid='column-sort-input-asc'\n          value=\"ASC\"\n          checked={ newOrder.sort === 'ASC' }\n          onChange={() => setNewOrder({ ...newOrder, sort: 'ASC' })}\n        />\n      </label>\n      <label htmlFor=\"desc\">\n        Descendente:\n        <input\n          type=\"radio\"\n          id=\"desc\"\n          name=\"sort\"\n          data-testid='column-sort-input-desc'\n          value=\"DESC\"\n          checked={ newOrder.sort === 'DESC' }\n          onChange={() => setNewOrder({ ...newOrder, sort: 'DESC' })}\n        />\n      </label>\n      <button type=\"button\" data-testid='column-sort-button' onClick={() => setFilters({ ...filters, order: newOrder })}>Ordenar</button>\n      {renderFilters()}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}