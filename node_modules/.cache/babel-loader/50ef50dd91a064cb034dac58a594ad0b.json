{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documents/projects/sd-011-project-starwars-planets-search/src/PlanetsProvider.js\";\nimport React, { useState } from 'react';\nimport PlanetsContext from './PlanetsContext';\nconst url = 'https://swapi-trybe.herokuapp.com/api/planets/';\n\nfunction Provider({\n  children\n}) {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchData = () => fetch(url).then(result => result.json()).then(data => setData(data.results));\n\n  const contextValue = {\n    data,\n    fetchData,\n    loading,\n    setLoading\n  };\n  return /*#__PURE__*/React.createElement(PlanetsContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nexport default Provider;","map":{"version":3,"sources":["/home/rafael/Documents/projects/sd-011-project-starwars-planets-search/src/PlanetsProvider.js"],"names":["React","useState","PlanetsContext","url","Provider","children","data","setData","loading","setLoading","fetchData","fetch","then","result","json","results","contextValue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,MAAMC,GAAG,GAAG,gDAAZ;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;;AACA,QAAMS,SAAS,GAAG,MAAMC,KAAK,CAACR,GAAD,CAAL,CACvBS,IADuB,CACjBC,MAAD,IAAYA,MAAM,CAACC,IAAP,EADM,EAEvBF,IAFuB,CAEjBN,IAAD,IAAUC,OAAO,CAACD,IAAI,CAACS,OAAN,CAFC,CAAxB;;AAIA,QAAMC,YAAY,GAAG;AACnBV,IAAAA,IADmB;AAEnBI,IAAAA,SAFmB;AAGnBF,IAAAA,OAHmB;AAInBC,IAAAA;AAJmB,GAArB;AAOA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEO,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,QADH,CADF;AAKD;;AAED,eAAeD,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport PlanetsContext from './PlanetsContext';\nconst url = 'https://swapi-trybe.herokuapp.com/api/planets/';\n\nfunction Provider({ children }) {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fetchData = () => fetch(url)\n  .then((result) => result.json())\n  .then((data) => setData(data.results))\n\n  const contextValue = {\n    data,\n    fetchData,\n    loading,\n    setLoading,\n  };\n\n  return (\n    <PlanetsContext.Provider value={contextValue}>\n      {children}\n    </PlanetsContext.Provider>\n  );\n}\n\nexport default Provider;"]},"metadata":{},"sourceType":"module"}