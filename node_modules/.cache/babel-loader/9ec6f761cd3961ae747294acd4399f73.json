{"ast":null,"code":"import _regeneratorRuntime from\"/home/rafael/Documents/projects/starwars-planets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/rafael/Documents/projects/starwars-planets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useContext,useEffect}from'react';import PlanetsContext from'./PlanetsContext';export default function Table(){var _useContext=useContext(PlanetsContext),filteredData=_useContext.filteredData,fetchData=_useContext.fetchData,data=_useContext.data,setFilteredData=_useContext.setFilteredData,applyFilters=_useContext.applyFilters;useEffect(function(){var getData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchData();case 2:case\"end\":return _context.stop();}}},_callee);}));return function getData(){return _ref.apply(this,arguments);};}();getData();},[]);useEffect(function(){setFilteredData(data);applyFilters();},[data]);var renderTableRows=function renderTableRows(){return filteredData.map(function(item){return/*#__PURE__*/React.createElement(\"tr\",{key:item.name},/*#__PURE__*/React.createElement(\"td\",{\"data-testid\":\"planet-name\"},item.name),/*#__PURE__*/React.createElement(\"td\",null,item.rotation_period),/*#__PURE__*/React.createElement(\"td\",null,item.orbital_period),/*#__PURE__*/React.createElement(\"td\",null,item.diameter),/*#__PURE__*/React.createElement(\"td\",null,item.climate),/*#__PURE__*/React.createElement(\"td\",null,item.gravity),/*#__PURE__*/React.createElement(\"td\",null,item.terrain),/*#__PURE__*/React.createElement(\"td\",null,item.surface_water),/*#__PURE__*/React.createElement(\"td\",null,item.population),/*#__PURE__*/React.createElement(\"td\",null,item.films),/*#__PURE__*/React.createElement(\"td\",null,item.created),/*#__PURE__*/React.createElement(\"td\",null,item.edited),/*#__PURE__*/React.createElement(\"td\",null,item.url));});};if(!filteredData.length){return/*#__PURE__*/React.createElement(\"h1\",null,\"Loading\");}return/*#__PURE__*/React.createElement(\"table\",null,/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,Object.keys(data[0]).map(function(item){return/*#__PURE__*/React.createElement(\"th\",{key:item},item);}))),/*#__PURE__*/React.createElement(\"tbody\",null,renderTableRows()));}","map":{"version":3,"sources":["/home/rafael/Documents/projects/starwars-planets/src/Table.js"],"names":["React","useContext","useEffect","PlanetsContext","Table","filteredData","fetchData","data","setFilteredData","applyFilters","getData","renderTableRows","map","item","name","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url","length","Object","keys"],"mappings":"2UAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,KAA6C,OAA7C,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CAEA,cAAe,SAASC,CAAAA,KAAT,EAAiB,iBAEMH,UAAU,CAACE,cAAD,CAFhB,CACtBE,YADsB,aACtBA,YADsB,CACRC,SADQ,aACRA,SADQ,CACGC,IADH,aACGA,IADH,CAE5BC,eAF4B,aAE5BA,eAF4B,CAEXC,YAFW,aAEXA,YAFW,CAI9BP,SAAS,CAAC,UAAM,CACd,GAAMQ,CAAAA,OAAO,0FAAG,yJACRJ,CAAAA,SAAS,EADD,uDAAH,kBAAPI,CAAAA,OAAO,0CAAb,CAGAA,OAAO,GACR,CALQ,CAKN,EALM,CAAT,CAOAR,SAAS,CAAC,UAAM,CACdM,eAAe,CAACD,IAAD,CAAf,CACAE,YAAY,GACb,CAHQ,CAGN,CAACF,IAAD,CAHM,CAAT,CAKA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,SAAMN,CAAAA,YAAY,CAACO,GAAb,CAAiB,SAACC,IAAD,qBAC7C,0BAAI,GAAG,CAAGA,IAAI,CAACC,IAAf,eACE,0BAAI,cAAY,aAAhB,EAA+BD,IAAI,CAACC,IAApC,CADF,cAEE,8BAAKD,IAAI,CAACE,eAAV,CAFF,cAGE,8BAAKF,IAAI,CAACG,cAAV,CAHF,cAIE,8BAAKH,IAAI,CAACI,QAAV,CAJF,cAKE,8BAAKJ,IAAI,CAACK,OAAV,CALF,cAME,8BAAKL,IAAI,CAACM,OAAV,CANF,cAOE,8BAAKN,IAAI,CAACO,OAAV,CAPF,cAQE,8BAAKP,IAAI,CAACQ,aAAV,CARF,cASE,8BAAKR,IAAI,CAACS,UAAV,CATF,cAUE,8BAAKT,IAAI,CAACU,KAAV,CAVF,cAWE,8BAAKV,IAAI,CAACW,OAAV,CAXF,cAYE,8BAAKX,IAAI,CAACY,MAAV,CAZF,cAaE,8BAAKZ,IAAI,CAACa,GAAV,CAbF,CAD6C,EAAjB,CAAN,EAAxB,CAkBA,GAAI,CAACrB,YAAY,CAACsB,MAAlB,CAA0B,CACxB,mBAAO,wCAAP,CACD,CAAC,mBACA,8CACE,8CACE,8BACGC,MAAM,CAACC,IAAP,CAAYtB,IAAI,CAAC,CAAD,CAAhB,EAAqBK,GAArB,CAAyB,SAACC,IAAD,qBAAU,0BAAI,GAAG,CAAGA,IAAV,EAAmBA,IAAnB,CAAV,EAAzB,CADH,CADF,CADF,cAME,iCACGF,eAAe,EADlB,CANF,CADA,CAYH","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport PlanetsContext from './PlanetsContext';\n\nexport default function Table() {\n  const { filteredData, fetchData, data,\n    setFilteredData, applyFilters } = useContext(PlanetsContext);\n\n  useEffect(() => {\n    const getData = async () => {\n      await fetchData();\n    };\n    getData();\n  }, []);\n\n  useEffect(() => {\n    setFilteredData(data);\n    applyFilters();\n  }, [data]);\n\n  const renderTableRows = () => filteredData.map((item) => (\n    <tr key={ item.name }>\n      <td data-testid=\"planet-name\">{item.name}</td>\n      <td>{item.rotation_period}</td>\n      <td>{item.orbital_period}</td>\n      <td>{item.diameter}</td>\n      <td>{item.climate}</td>\n      <td>{item.gravity}</td>\n      <td>{item.terrain}</td>\n      <td>{item.surface_water}</td>\n      <td>{item.population}</td>\n      <td>{item.films}</td>\n      <td>{item.created}</td>\n      <td>{item.edited}</td>\n      <td>{item.url}</td>\n    </tr>\n  ));\n\n  if (!filteredData.length) {\n    return <h1>Loading</h1>;\n  } return (\n    <table>\n      <thead>\n        <tr>\n          {Object.keys(data[0]).map((item) => <th key={ item }>{ item }</th>)}\n        </tr>\n      </thead>\n      <tbody>\n        {renderTableRows()}\n      </tbody>\n    </table>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}