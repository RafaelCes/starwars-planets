{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Documents/projects/sd-011-project-starwars-planets-search/src/Table.js\";\nimport React, { useContext, useEffect } from 'react';\nimport PlanetsContext from './PlanetsContext';\nexport default function Table() {\n  const {\n    filteredData,\n    fetchData,\n    data,\n    setFilteredData,\n    applyFilters\n  } = useContext(PlanetsContext);\n  useEffect(() => {\n    const getData = async () => {\n      await fetchData();\n    };\n\n    getData();\n  }, []);\n  useEffect(() => {\n    setFilteredData(data);\n    applyFilters();\n  }, [data]);\n\n  const renderTableRows = () => filteredData.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n    key: item.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"data-testid\": \"planet-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, item.rotation_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, item.orbital_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, item.diameter), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, item.climate), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, item.gravity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, item.terrain), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, item.surface_water), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, item.population), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, item.films), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, item.created), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, item.edited), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, item.url)));\n\n  if (!filteredData.length) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }\n    }, \"Loading\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, Object.keys(data[0]).map(item => /*#__PURE__*/React.createElement(\"th\", {\n    key: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 47\n    }\n  }, item)))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, renderTableRows()));\n}","map":{"version":3,"sources":["/home/rafael/Documents/projects/sd-011-project-starwars-planets-search/src/Table.js"],"names":["React","useContext","useEffect","PlanetsContext","Table","filteredData","fetchData","data","setFilteredData","applyFilters","getData","renderTableRows","map","item","name","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url","length","Object","keys"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA,IAA3B;AACHC,IAAAA,eADG;AACcC,IAAAA;AADd,MAC+BR,UAAU,CAACE,cAAD,CAD/C;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,OAAO,GAAG,YAAY;AAC1B,YAAMJ,SAAS,EAAf;AACD,KAFD;;AAGAI,IAAAA,OAAO;AACR,GALQ,EAKN,EALM,CAAT;AAOAR,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,eAAe,CAACD,IAAD,CAAf;AACAE,IAAAA,YAAY;AACb,GAHQ,EAGN,CAACF,IAAD,CAHM,CAAT;;AAKA,QAAMI,eAAe,GAAG,MAAMN,YAAY,CAACO,GAAb,CAAkBC,IAAD,iBAC7C;AAAI,IAAA,GAAG,EAAGA,IAAI,CAACC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BD,IAAI,CAACC,IAApC,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACE,eAAV,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAI,CAACG,cAAV,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,IAAI,CAACI,QAAV,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,IAAI,CAACK,OAAV,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,IAAI,CAACM,OAAV,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,IAAI,CAACO,OAAV,CAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,IAAI,CAACQ,aAAV,CARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,IAAI,CAACS,UAAV,CATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,IAAI,CAACU,KAAV,CAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,IAAI,CAACW,OAAV,CAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,IAAI,CAACY,MAAV,CAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,IAAI,CAACa,GAAV,CAbF,CAD4B,CAA9B;;AAkBA,MAAI,CAACrB,YAAY,CAACsB,MAAlB,EAA0B;AACxB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;;AAAC,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,IAAP,CAAYtB,IAAI,CAAC,CAAD,CAAhB,EAAqBK,GAArB,CAA0BC,IAAD,iBAAU;AAAI,IAAA,GAAG,EAAGA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,IAAnB,CAAnC,CADH,CADF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,eAAe,EADlB,CANF,CADA;AAYH","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport PlanetsContext from './PlanetsContext';\n\nexport default function Table() {\n  const { filteredData, fetchData, data,\n     setFilteredData, applyFilters } = useContext(PlanetsContext);\n\n  useEffect(() => {\n    const getData = async () => {\n      await fetchData();\n    };\n    getData();\n  }, []);\n\n  useEffect(() => {\n    setFilteredData(data);\n    applyFilters();\n  }, [data]);\n\n  const renderTableRows = () => filteredData.map((item) => (\n    <tr key={ item.name }>\n      <td data-testid=\"planet-name\">{item.name}</td>\n      <td>{item.rotation_period}</td>\n      <td>{item.orbital_period}</td>\n      <td>{item.diameter}</td>\n      <td>{item.climate}</td>\n      <td>{item.gravity}</td>\n      <td>{item.terrain}</td>\n      <td>{item.surface_water}</td>\n      <td>{item.population}</td>\n      <td>{item.films}</td>\n      <td>{item.created}</td>\n      <td>{item.edited}</td>\n      <td>{item.url}</td>\n    </tr>\n  ));\n\n  if (!filteredData.length) {\n    return <h1>Loading</h1>;\n  } return (\n    <table>\n      <thead>\n        <tr>\n          {Object.keys(data[0]).map((item) => <th key={ item }>{ item }</th>)}\n        </tr>\n      </thead>\n      <tbody>\n        {renderTableRows()}\n      </tbody>\n    </table>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}